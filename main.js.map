{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;AAAwF;AAG1D;;;AAQvB,MAAM,0BAA0B;IAUrC,YACU,OAAiC;QAAjC,YAAO,GAAP,OAAO,CAA0B;QAVlC,UAAK,GAAsB;YAClC,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,aAAa;YACpD,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS;SAAC,CAAC;QAI/C,gBAAW,GAAG,IAAI,uDAAY,EAAE,CAAC;QACjC,cAAS,GAAG,IAAI,uDAAY,EAAE,CAAC;IAKzC,CAAC;IAEO,SAAS;QACf,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,IAAI,CAAC,MAAM,GAAG;gBACZ,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,OAAO,EAAE;oBACxC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE;iBACxB;aACF,CAAC;SACH;QACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YAC5B,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,EAAE,CAAC;SAC9B;QACD,sDAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QAC5D,sDAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;QAClE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;YACxB,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;SAC1B;QACD,sDAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAC;QAC/D,sDAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;QAC7D,sDAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;QAChD,sDAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;QACnD,sDAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,EAAE,EAAE,CAAC,CAAC;QACjD,sDAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,EAAC,IAAI,CAAC,CAAC;QAC9C,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;YACxB,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;SAC1B;QACD,sDAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAErE,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC;QACzE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YAC7D,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,OAAO;QACL,MAAM,KAAK,GAAG,CAAC,OAAO,IAAI,CAAC,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;QAC3E,OAAO,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC;IACzC,CAAC;;oGA7DU,0BAA0B;wHAA1B,0BAA0B;QCXvC,oEAA6C;;;;;;;;;;;;;;;;;;ACC8B;;AAQpE,MAAM,uBAAuB;;8FAAvB,uBAAuB;oHAAvB,uBAAuB;;mIAAvB,uBAAuB,mBAJnB,sFAA0B,aAE/B,sFAA0B;;;;;;;;;;;;;;;;;;;;;;ACNtC;AACA;;AAKM,MAAOG,wBAAP,CAA+B;EAGnCC,eAAiB;;EAEVC,aAAa;IAClB,OAAO;MACLC,WAAW,EAAE;QACXC,IAAI,EAAE,MADK;QAEXC,IAAI,EAAE;MAFK,CADR;MAKLC,OAAO,EAAE;QACPC,SAAS,EAAE,QADJ;QAEPC,UAAU,EAAE;MAFL,CALJ;MASLC,MAAM,EAAE,IATH;MAULC,YAAY,EAAE,CAVT;MAWLC,SAAS,EAAE;IAXN,CAAP;EAaD;;EAEDC,WAAW,CAACC,UAAD,EAAmCC,wBAAnC,EAAmE;IAC5E,MAAMC,SAAS,GAAG,KAAKC,MAAL,CAAYH,UAAU,CAACI,UAAX,CAAsBC,YAAlC,EAAgD,OAAhD,CAAlB;IACA,OAAO,CAAC,CAACH,SAAF,IAAeA,SAAS,GAAGD,wBAAlC;EACD;;EAEDK,KAAK,CAACC,MAAD,EAA+BN,wBAA/B,EAA+D;IAAA;;IAClE,IAAI,OAAO,KAAKD,UAAZ,KAA2B,WAA/B,EAA4C;MAC1C,KAAKA,UAAL,GAAkB,IAAId,yCAAJ,EAAlB;IACD;;IACDF,qEAAA,CAAoBgB,UAAD,IAAqC;MACtD,KAAKQ,WAAL,CAAiBR,UAAjB;IACD,CAFD;IAGAhB,oEAAA,CAAmB0B,MAAD,IAAiC;MACjD,MAAMC,OAAO,GAAGD,MAAM,CAACN,UAAP,CAAkBQ,IAAlC;;MACA,IAAI,KAAKb,WAAL,CAAiBW,MAAjB,EAAyBT,wBAAzB,CAAJ,EAAwD;QACtD,KAAKD,UAAL,EAAiBa,IAAjB,CAAsBF,OAAO,GAAG,EAAhC;MACD;IACF,CALD;IAOA3B,8DAAA,CAAYuB,MAAZ;MAAA,sKAAoB,WAAOQ,KAAP,EAAgB;QAClC,IAAIA,KAAJ,EAAW;UACT,KAAI,CAACf,UAAL,EAAiBe,KAAjB,CAAuBA,KAAvB;UACA,MAAM,KAAI,CAACC,IAAL,EAAN;QACD,CAHD,MAGO;UACLhC,+DAAA;QACD;MACF,CAPD;;MAAA;QAAA;MAAA;IAAA;IASA,OAAO,KAAKgB,UAAZ;EAED;;EAEDgB,IAAI;IACF,IAAI,OAAO,KAAKhB,UAAZ,KAA2B,WAA/B,EAA4C;MAC1C,KAAKA,UAAL,EAAiBiB,WAAjB;MACA,KAAKjB,UAAL,GAAkBkB,SAAlB;IACD;;IACD,OAAOjC,0CAAI,CAACD,8DAAA,EAAD,CAAX;EACD;EAED;;;EACQmB,MAAM,CAACgB,GAAD,EAAaC,QAAb,EAA6B;IACzC,IAAI,CAACD,GAAL,EAAU;MACR,OAAOD,SAAP;IACD;;IACD,OAAOC,GAAG,CAACE,MAAJ,CAAW,CAACC,GAAD,EAAMC,IAAN,KAAgBH,QAAQ,IAAIG,IAAb,GAAqBD,GAAG,GAAGC,IAAI,CAACH,QAAD,CAA/B,GAA4CE,GAAtE,EAA2E,CAA3E,IAAgFH,GAAG,CAACK,MAA3F;EACD;;EAEOhB,WAAW,CAACE,MAAD,EAA6B;IAC9C,MAAMe,UAAU,GAAGzC,8EAAnB;IACA,MAAM6C,aAAa,GAAsB7C,8EAAzC;;IAEA,IAAI0B,MAAJ,EAAY;MACV,IAAIA,MAAM,CAACqB,KAAX,EAAkB;QAChB,MAAMC,WAAW,GAAWH,aAAa,CAACI,YAAd,CAA2B,OAA3B,KAAuC,GAAnE;QACA,MAAMC,YAAY,GAAWL,aAAa,CAACI,YAAd,CAA2B,QAA3B,KAAwC,GAArE;QACA,MAAME,KAAK,GAAGC,QAAQ,CAACJ,WAAD,EAAc,EAAd,CAAtB;QACA,MAAMK,MAAM,GAAGD,QAAQ,CAACF,YAAD,EAAe,EAAf,CAAvB;QACAT,UAAU,CAACa,SAAX,CAAqB,CAArB,EAAwB,CAAxB,EAA2BH,KAA3B,EAAkCE,MAAlC;QACA3B,MAAM,CAACqB,KAAP,CAAaQ,MAAb,CAAqBC,GAAD,IAASA,GAAG,KAAK9B,MAAM,CAAC8B,GAA5C,EAAiDC,OAAjD,CAA0DD,GAAD,IAAQ;UAC/DxD,6EAAA,CAA2BwD,GAA3B,EAAgC;YAACI,CAAC,EAAE,CAAJ;YAAOC,CAAC,EAAE;UAAV,CAAhC,EAA8CpB,UAA9C,EAA0D;YAACqB,KAAK,EAAE,OAAR;YAAiBC,SAAS,EAAE;UAA5B,CAA1D;QACD,CAFD;MAGD;;MAED,IAAIrC,MAAM,CAAC8B,GAAX,EAAgB;QACdxD,6EAAA,CAA2B0B,MAAM,CAAC8B,GAAlC,EAAuC;UAACI,CAAC,EAAE,CAAJ;UAAOC,CAAC,EAAE;QAAV,CAAvC,EAAqDpB,UAArD,EAAiE;UAACqB,KAAK,EAAE,MAAR;UAAgBC,SAAS,EAAE;QAA3B,CAAjE;MACD;;MAED,IAAIrC,MAAM,CAACN,UAAP,IAAqBM,MAAM,CAACN,UAAP,CAAkBQ,IAA3C,EAAiD;QAC/C5B,6EAAA,CAA2B0B,MAAM,CAACsC,IAAlC,EAAwC;UAACJ,CAAC,EAAE,GAAJ;UAASC,CAAC,EAAE;QAAZ,CAAxC,EAA0DpB,UAA1D,EAAsE;UAACqB,KAAK,EAAE,KAAR;UAAeC,SAAS,EAAE;QAA1B,CAAtE;MACD;IACF;EACF;;AA7FkC;;;mBAAxB5D;AAAwB;;;SAAxBA;EAAwB8D,SAAxB9D,wBAAwB;EAAA+D,YAFvB;;;;;;;;;;;;;;;ACLP,MAAM,KAAK;IAChB,oBAAoB;IACpB,MAAM,CAAC,YAAY,CAAC,MAAW,EAAE,IAAY,EAAE,KAAU;QACvD,IAAI,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,WAAW,EAAE;YACvC,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;SACtB;IACH,CAAC;CACF;;;;;;;;;;;;;;;;;;ACNsD;AACU;;;AAIjE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,yEAAe,EAAE;CAE5C,CAAC;AASK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHANjB,iEAAoB,CAAC,MAAM,EAAE;YACrC,OAAO,EAAE,IAAI;YACb,sBAAsB,EAAE,WAAW;SACpC,CAAC,EACQ,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;AChByC;AAGqB;AACwB;;;;;;;;AAE9G,MAAM;AACN,kGAAkG;AAClG,qEAAqE;AACrE,+GAA+G;AAC/G,iCAAiC;AACjC,qCAAqC;AAmB9B,MAAM,gBAAgB;IAI5B,YAAmB,WAA2B,EAAS,IAAiB;QAArD,gBAAW,GAAX,WAAW,CAAgB;QAAS,SAAI,GAAJ,IAAI,CAAa;QAHvE,YAAO,GAAG,KAAK,CAAC;IAG0D,CAAC;IAC3E,aAAa;QACX,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;IAED,OAAO,CAAC,KAAU;QAChB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAEtB,CAAC;;gFAfU,gBAAgB;8GAAhB,gBAAgB;QAZ3B,yEAA0C;QACjB,oEAAS;QAAA,4DAAK;QACtC,4EAAwG;QAA7C,wIAAS,wBAAoB,aAAa,CAAC,IAAC;QAAC,4DAAS;QAElH,yEAAyC;QAClB,6LAAiB,yGAAgB,mBAAe,IAA/B,2GACqC,mBAAe,IADpD;QACsD,4DAAsB;;QAD7F,0DAAiB;QAAjB,4EAAiB;wBAP/B,qHAAuB;AAqC3B,MAAM,YAAY;IAQvB,YACU,IAAiB,EACjB,YAAsB;QADtB,SAAI,GAAJ,IAAI,CAAa;QACjB,iBAAY,GAAZ,YAAY,CAAU;QAPhC,YAAO,GAAG,KAAK,CAAC;QAChB,oBAAe,GAAG,IAAI,CAAC;QAEvB,kBAAa,GAAQ,sCAAsC,CAAC;QAO1D,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,GAAC,OAAO,CAAC,CAAC,CAAC,uDAAuD;QAC5H,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,GAAC,OAAO,CAAC,CAAC;IAClE,CAAC;IAEH,WAAW,CAAC,OAAsB;IAElC,CAAC;IAED,OAAO,CAAC,KAAU;QAChB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAEtB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IAC/B,CAAC;IAED,aAAa;QACT,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAC9B,CAAC;IACH,UAAU;QACR,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxB,OAAO,CAAC,GAAG,CAAoB,QAAQ,CAAC,cAAc,CAAC,qBAAqB,CAAE,CAAC,KAAK,CAAC,CAAC,CAAC,8CAA8C;IACvI,CAAC;IACD,IAAI;QACF,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC5D,QAAQ,CAAC,iBAAiB,CAAC,IAAI,GAAG,OAAO,CAAC;IAE1C,CAAC;;wEA5CU,YAAY;0GAAZ,YAAY;QCrDzB,yEAA+D;QAC7D,yEAA2B;QAC3B,4DAAM;QAEN,yEAAkB;QAKT,0EAAU;QAAA,4DAAI;QAAC,uDAAW;QAAA,4DAAK;QACtC,oEAAG;QAES,wDAAkB;QAAA,4DAAS;QAQzC,0EAAsB;QACyB,6EAAiB;QAAA,4DAAQ;QACxE,0EAA8B;QAC5B,uEAAmJ;QACnJ,6EAA4F;QAAjD,qIAAS,UAAM,IAAC;QAAiC,kEAAM;QAAA,4DAAS;QAG7G,2EAAwC;QAEe,qIAAS,gBAAY,IAAC;QAAC,uFAAsB;QAAA,4DAAS;QAI7G,4EAA+B;QAE/B,4DAAM;;QA1BkB,0DAAW;QAAX,sFAAW;QAEpB,0DAAqB;QAArB,8EAAqB;QACtB,0DAAkB;QAAlB,4FAAkB;QAWX,0DAAiB;QAAjB,uFAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBkB;AAGX;AAC+D;AACjE;AACc;AACA;AACO;AACX;AACE;AACF;AACA;AACI;AACE;AACkB;AACnB;AACE;AACV;AACG;;AA+BhD,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;0GAlBtB,oEAAa;QACb,qHAAuB;QACvB,4EAAkB;QAClB,uDAAW;QACX,qEAAe;QACf,sEAAe;QACf,kEAAa;QACb,oEAAc;QACd,kEAAa;QACb,kEAAa;QACb,sEAAe;QACf,wEAAgB;QAChB,0FAAuB;QACvB,iEAAgB;QAChB,kEAAS;mIAMA,SAAS,mBA1BlB,wDAAY;QACZ,qEAAe;QACf,uEAAe,aAIf,oEAAa;QACb,qHAAuB;QACvB,4EAAkB;QAClB,uDAAW;QACX,qEAAe;QACf,sEAAe;QACf,kEAAa;QACb,oEAAc;QACd,kEAAa;QACb,kEAAa;QACb,sEAAe;QACf,wEAAgB;QAChB,0FAAuB;QACvB,iEAAgB;QAChB,kEAAS;;;;;;;;;;;;;;;;;AC3C0B;;AACvC,2EAA2E;AAIpE,MAAM,WAAW;IAOtB;QALQ,kBAAa,GAAG,IAAI,iDAAe,CAAC,EAAE,CAAC,CAAC;QACxC,kBAAa,GAAG,IAAI,iDAAe,CAAC,EAAE,CAAC,CAAC;QAChD,mBAAc,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;QACnD,mBAAc,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;IAEnC,CAAC;IAEjB,aAAa,CAAC,OAAe;QAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC;IAClC,CAAC;IACD,aAAa,CAAC,OAAc;QAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC;IAClC,CAAC;;sEAdU,WAAW;4GAAX,WAAW,WAAX,WAAW,mBAFT,MAAM;;;;;;;;;;;;;;;;;;ACHoC;;;;AAUlD,MAAM,eAAe;IAE1B,YACU,KAAqB,EACrB,IAAiB;QADjB,UAAK,GAAL,KAAK,CAAgB;QACrB,SAAI,GAAJ,IAAI,CAAa;QAH3B,OAAE,GAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,2BAA2B;IAOrE,CAAC;IAEH,QAAQ;QAER,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,4DAA4D;IACtG,CAAC;;8EAbU,eAAe;6GAAf,eAAe;;;;;;;;;;;;;;;;;;;;;ACDrB,MAAM,eAAe;IAM1B,YAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IAAI,CAAC;IAE1C,QAAQ;QACR,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,GAAC,OAAO,CAAC,CAAC,CAAC,qDAAqD;IAC1H,CAAC;;8EAVU,eAAe;6GAAf,eAAe;QCV5B,yEAAiE;QAGvD,oEAAiM;QACrM,4DAAI;QAER,wEAAkD;QAAA,0EAAe;QAAA,4DAAK;;;;;;;;;;;;;;;;ACNxE,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./projects/ngx-barcode-scanner/src/lib/ngx-barcode-scanner.component.ts","./projects/ngx-barcode-scanner/src/lib/ngx-barcode-scanner.component.html","./projects/ngx-barcode-scanner/src/lib/ngx-barcode-scanner.module.ts","./projects/ngx-barcode-scanner/src/lib/ngx-barcode-scanner.service.ts","./projects/ngx-barcode-scanner/src/lib/utils.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/data.service.ts","./src/app/saeule/saeule.component.ts","./src/app/top-bar/top-bar.component.ts","./src/app/top-bar/top-bar.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\r\nimport {NgxBarcodeScannerService} from './ngx-barcode-scanner.service';\r\nimport {QuaggaJSConfigObject} from '@ericblade/quagga2';\r\nimport {Utils} from './utils';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'ngx-barcode-scanner',\r\n  templateUrl: './ngx-barcode-scanner.component.html',\r\n  styleUrls: ['./ngx-barcode-scanner.component.css']\r\n})\r\nexport class NgxBarcodeScannerComponent implements OnInit, OnDestroy {\r\n  @Input() codes: string | string[] = [\r\n    'code_128', 'ean', 'ean_8', 'code_39', 'code_39_vin',\r\n    'codabar', 'upc', 'upc_e', 'i2of5', '2of5', 'code_93'];\r\n  @Input() config!: QuaggaJSConfigObject;\r\n  @Input() errorThreshold!: number;\r\n  @Input() value!: string;\r\n  @Output() valueChange = new EventEmitter();\r\n  @Output() exception = new EventEmitter();\r\n\r\n  constructor(\r\n    private service: NgxBarcodeScannerService\r\n  ) {\r\n  }\r\n\r\n  private setConfig() {\r\n    if (!this.config) {\r\n      this.config = {\r\n        ...this.service.defaultConfig(), decoder: {\r\n          readers: this.readers()\r\n        }\r\n      };\r\n    }\r\n    if (!this.config.inputStream) {\r\n      this.config.inputStream = {};\r\n    }\r\n    Utils.setOrDefault(this.config.inputStream, 'name', 'Live');\r\n    Utils.setOrDefault(this.config.inputStream, 'type', 'LiveStream');\r\n    if (!this.config.locator) {\r\n      this.config.locator = {};\r\n    }\r\n    Utils.setOrDefault(this.config.locator, 'patchSize', 'medium');\r\n    Utils.setOrDefault(this.config.locator, 'halfSample', false);\r\n    Utils.setOrDefault(this.config, 'locate', true);\r\n    Utils.setOrDefault(this.config, 'numOfWorkers', 8);\r\n    Utils.setOrDefault(this.config, 'frequency', 10);\r\n    Utils.setOrDefault(this.config, 'torch',true);\r\n    if (!this.config.decoder) {\r\n      this.config.decoder = {};\r\n    }\r\n    Utils.setOrDefault(this.config.decoder, 'readers', this.readers());\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setConfig();\r\n    const threshold = isNaN(this.errorThreshold) ? 0.1 : this.errorThreshold;\r\n    this.service.start(this.config, threshold).subscribe((value) => {\r\n      this.valueChange.emit(value);\r\n    }, error => {\r\n      this.exception.emit(error);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.service.stop();\r\n  }\r\n\r\n  readers(): string[] {\r\n    const types = (typeof this.codes === 'string') ? [this.codes] : this.codes;\r\n    return types.map(it => it + '_reader');\r\n  }\r\n\r\n}\r\n","<div id=\"interactive\" class=\"viewport\"></div>\r\n","import {NgModule} from '@angular/core';\r\nimport {NgxBarcodeScannerComponent} from './ngx-barcode-scanner.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [NgxBarcodeScannerComponent],\r\n  imports: [],\r\n  exports: [NgxBarcodeScannerComponent]\r\n})\r\nexport class NgxBarcodeScannerModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport Quagga, {QuaggaJSConfigObject, QuaggaJSResultObject} from '@ericblade/quagga2';\r\nimport {from, Observable, Subject} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxBarcodeScannerService {\r\n  private scanResult ?: Subject<string>;\r\n\r\n  constructor() { }\r\n\r\n  public defaultConfig(): QuaggaJSConfigObject {\r\n    return {\r\n      inputStream: {\r\n        name: 'Live',\r\n        type: 'LiveStream',\r\n      },\r\n      locator: {\r\n        patchSize: 'medium',\r\n        halfSample: false\r\n      },\r\n      locate: true,\r\n      numOfWorkers: 8,\r\n      frequency: 10\r\n    };\r\n  }\r\n\r\n  isScanMatch(scanResult: QuaggaJSResultObject, errorThresholdPercentage: number): boolean {\r\n    const avgErrors = this.meanBy(scanResult.codeResult.decodedCodes, 'error');\r\n    return !!avgErrors && avgErrors < errorThresholdPercentage;\r\n  }\r\n\r\n  start(config: QuaggaJSConfigObject, errorThresholdPercentage: number): Observable<string> {\r\n    if (typeof this.scanResult === 'undefined') {\r\n      this.scanResult = new Subject<string>();\r\n    }\r\n    Quagga.onProcessed((scanResult: QuaggaJSResultObject) => {\r\n      this.onProcessed(scanResult);\r\n    });\r\n    Quagga.onDetected((result: QuaggaJSResultObject) => {\r\n      const barcode = result.codeResult.code;\r\n      if (this.isScanMatch(result, errorThresholdPercentage)) {\r\n        this.scanResult?.next(barcode + '');\r\n      }\r\n    });\r\n\r\n    Quagga.init(config, async (error) => {\r\n      if (error) {\r\n        this.scanResult?.error(error);\r\n        await this.stop();\r\n      } else {\r\n        Quagga.start();\r\n      }\r\n    });\r\n\r\n    return this.scanResult;\r\n\r\n  }\r\n\r\n  stop(): Observable<void> {\r\n    if (typeof this.scanResult !== 'undefined') {\r\n      this.scanResult?.unsubscribe();\r\n      this.scanResult = undefined;\r\n    }\r\n    return from(Quagga.stop());\r\n  }\r\n\r\n  /* eslint-disable */\r\n  private meanBy(arr: any[], property: string): number | undefined {\r\n    if (!arr) {\r\n      return undefined;\r\n    }\r\n    return arr.reduce((acc, item) => (property in item) ? acc + item[property] : acc, 0) / arr.length;\r\n  }\r\n\r\n  private onProcessed(result: QuaggaJSResultObject) {\r\n    const drawingCtx = Quagga.canvas.ctx.overlay;\r\n    const drawingCanvas: HTMLCanvasElement = Quagga.canvas.dom.overlay;\r\n\r\n    if (result) {\r\n      if (result.boxes) {\r\n        const canvasWidth: string = drawingCanvas.getAttribute('width') ?? '0';\r\n        const canvasHeight: string = drawingCanvas.getAttribute('height') ?? '0';\r\n        const width = parseInt(canvasWidth, 10);\r\n        const height = parseInt(canvasHeight, 10);\r\n        drawingCtx.clearRect(0, 0, width, height);\r\n        result.boxes.filter((box) => box !== result.box).forEach((box) => {\r\n          Quagga.ImageDebug.drawPath(box, {x: 0, y: 1}, drawingCtx, {color: 'green', lineWidth: 2});\r\n        });\r\n      }\r\n\r\n      if (result.box) {\r\n        Quagga.ImageDebug.drawPath(result.box, {x: 0, y: 1}, drawingCtx, {color: '#00F', lineWidth: 2});\r\n      }\r\n\r\n      if (result.codeResult && result.codeResult.code) {\r\n        Quagga.ImageDebug.drawPath(result.line, {x: 'x', y: 'y'}, drawingCtx, {color: 'red', lineWidth: 3});\r\n      }\r\n    }\r\n  }\r\n}\r\n","export class Utils {\r\n  /* eslint-disable */\r\n  static setOrDefault(object: any, path: string, value: any): void {\r\n    if (typeof object[path] === 'undefined') {\r\n      object[path] = value;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SaeuleComponent } from '../app/saeule/saeule.component';\r\nimport { AppComponent } from './app.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: \":id\", component: SaeuleComponent },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    useHash: true,\r\n    relativeLinkResolution: 'corrected',\r\n  }),],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import {Component,OnChanges, SimpleChanges} from '@angular/core';\r\nimport { ActivatedRoute,ParamMap } from '@angular/router'\r\nimport { DataService } from \"./data.service\";\r\nimport { NgbActiveModal, NgbModal,NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\r\nimport {NgxBarcodeScannerModule} from '../../projects/ngx-barcode-scanner/src/lib/ngx-barcode-scanner.module';\r\n\r\n//TODO\r\n//Modal auf Fullscreen machen --> siehe DOku https://ng-bootstrap.github.io/#/components/modal/api\r\n//Torch irgendwie anbekommen https://github.com/ericblade/quagga2#api\r\n//Irgenwie dafür sorgen das man den gescannten Barcode aus dem Modalfenster in die Hauptanwendung bekommt check\r\n// NGonchange hier implementieren\r\n//Fenster auf Smartphone gößer machen\r\n\r\n@Component({\r\n\tselector: 'ngbd-modal-content',\r\n\tstandalone: true,\r\n  imports:[NgxBarcodeScannerModule],\r\n\ttemplate: `\r\n\t\t<div class=\"modal-header\" fullscreen=true>\r\n\t\t\t<h4 class=\"modal-title\">Hi there!</h4>\r\n\t\t\t<button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\"></button>\r\n\t\t</div>\r\n\t\t<div class=\"modal-body\"  fullscreen=true>\r\n    <ngx-barcode-scanner [(value)]=\"value\" (valueChange)=\"onValueChange()\"\r\n                       [codes]=\"['i2of5']\" [errorThreshold]=\"0.1\" (exception)=\"onError($event)\"></ngx-barcode-scanner>\r\n\t\t</div>\r\n\r\n\t`,\r\n})\r\n\r\nexport class NgbdModalContent {\r\n  isError = false;\r\n  value!: string;\r\n  nachricht!:string;\r\n\tconstructor(public activeModal: NgbActiveModal,private data: DataService) {}\r\n  onValueChange(){\r\n    this.data.changeBarcode(this.value);\r\n    console.log(this.value);\r\n    this.activeModal.close();\r\n  }\r\n\r\n  onError(error: any) {\r\n    console.error(error);\r\n    this.isError = true;\r\n\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent   {\r\n\r\n  value!: string;\r\n  isError = false;\r\n  scannerSichtbar = true;\r\n  message: string;\r\n  fehlermeldung:string=\"Bitte Barcode scannen oder eingeben.\";\r\n\r\n  constructor(\r\n    private data: DataService,\r\n    private modalService: NgbModal\r\n    )\r\n    {\r\n    this.data.currentMessage.subscribe(message => this.message=message); //Bis jetzt noch Platzhalter, hier muss REST Aufruf hin\r\n    this.data.currentBarcode.subscribe(barcode => this.value=barcode);\r\n    }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n\r\n  }\r\n\r\n  onError(error: any) {\r\n    console.error(error);\r\n    this.isError = true;\r\n\r\n  }\r\n\r\n  onValueChange(){\r\n    this.scannerSichtbar = false;\r\n  }\r\n\r\n  erneutScannen(){\r\n      this.scannerSichtbar = true;\r\n    }\r\n  abschicken(){\r\n    console.log('ID Säule:');\r\n    console.log(this.message);\r\n    console.log('Barcode:');\r\n    console.log((<HTMLInputElement>document.getElementById(\"inputBarcodeScanner\")).value); //Inhalt des Matinputfield wird hier abgerufen\r\n  }\r\n  open(){\r\n    const modalRef = this.modalService.open(NgbdModalContent);\r\n\t\tmodalRef.componentInstance.name = 'World';\r\n\r\n  }\r\n  }\r\n\r\n\r\n\r\n","<div class=\"container-fluid p-0 min-vh-100 d-flex flex-column\">\r\n  <app-top-bar></app-top-bar>\r\n  </div>\r\n\r\n  <div class=\"card\">\r\n    <div class=\"card-body\">\r\n\r\n\r\n  <div class=\"content\">\r\n    <h2><u>Ladesäule:</u> {{message}}</h2>\r\n    <p>\r\n      <ngb-alert [dismissible]=\"false\">\r\n        <strong>{{fehlermeldung}} </strong>\r\n      </ngb-alert>\r\n    </p>\r\n\r\n\r\n  </div>\r\n\r\n\r\n  <div class=\"content2\">\r\n  <label for=\"inputPassword5\" class=\"form-label\">Erkannter Barcode</label>\r\n  <div class=\"input-group mb-3\">\r\n    <input type=\"text\" value=\"{{value}}\" id=\"inputBarcodeScanner\" class=\"form-control\" aria-label=\"Erkannter Barcode\" aria-describedby=\"button-addon2\">\r\n    <button class=\"btn btn-outline-secondary \" (click)=\"open()\"type=\"button\" id=\"button-addon2\">Button</button>\r\n  </div>\r\n  </div>\r\n  <div class=\"row justify-content-center\">\r\n    <!--<button type=\"button\" class=\"btn btn-primary\" (click)=\"erneutScannen()\">Erneut scannen</button>-->\r\n    <button type=\"button\" class=\"btn btn-primary btn-lg\" (click)=\"abschicken()\">Ladevorgang Bestätigen</button>\r\n  </div>\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  </div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport {NgxBarcodeScannerModule} from '../../projects/ngx-barcode-scanner/src/lib/ngx-barcode-scanner.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SaeuleComponent } from './saeule/saeule.component';\r\nimport { TopBarComponent } from './top-bar/top-bar.component';\r\nimport {AppRoutingModule} from'./app-routing.module'\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SaeuleComponent,\r\n    TopBarComponent\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NgxBarcodeScannerModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    NgbModule\r\n\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n//Data Service ist dafuer da Nachrichten zwischen Komponenten auszutauschen\r\n@Injectable(\r\n  {providedIn: 'root'}\r\n)\r\nexport class DataService {\r\n\r\n  private messageSource = new BehaviorSubject('');\r\n  private barcodeSource = new BehaviorSubject('');\r\n  currentMessage = this.messageSource.asObservable();\r\n  currentBarcode = this.barcodeSource.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  changeMessage(message: string) {\r\n    this.messageSource.next(message)\r\n  }\r\n  changeBarcode(barcode:string){\r\n    this.barcodeSource.next(barcode)\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute,ParamMap } from '@angular/router'\r\nimport { DataService } from '../data.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-saeule',\r\n  templateUrl: './saeule.component.html',\r\n  styleUrls: ['./saeule.component.css']\r\n})\r\nexport class SaeuleComponent implements OnInit {\r\n  id =this.route.snapshot.paramMap.get('id'); //Url Parameter id bekommen\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private data: DataService\r\n    )\r\n    {\r\n\r\n    }\r\n\r\n  ngOnInit(): void {\r\n\r\n  this.data.changeMessage(String(this.id)); //Id weiter senden mithilfe DataService an Top-Bar Component\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from \"../data.service\";\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-top-bar',\r\n  templateUrl: './top-bar.component.html',\r\n  styleUrls: ['./top-bar.component.css']\r\n})\r\nexport class TopBarComponent implements OnInit {\r\n  message: string;\r\n\r\n\r\n\r\n\r\n  constructor(private data: DataService) { }\r\n\r\n  ngOnInit(): void { //ista oder esta? oder kista?\r\n  this.data.currentMessage.subscribe(message => this.message=message); //Url Parameter ID von der Componente Saeule bekommen\r\n  }\r\n\r\n}\r\n","<div class=\"navbar navbar-default  navbar-dark backg-roboblue \" >\r\n  <div id=\"imgwrapper\" >\r\n      <a id=\"imgwrapper2\" href=\"/\" class=\"d-inline-flex mr-2 ms-4 py-075rem\">\r\n          <img id=\"robologo\" class=\"img-fluid\" src=\"assets\\graphics\\logo_robotron.svg\" width=\"411\" height=\"70\"  alt=\"Robotron Datenbank-Software GmbH Firmenlogo\" title=\"Robotron Datenbank-Software GmbH\">\r\n      </a>\r\n  </div>\r\n  <li class=\"navbar-nav mx-5 navbar-brand ms-auto\" >Barcode Scanner</li>\r\n\r\n\r\n\r\n\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["Quagga","from","Subject","NgxBarcodeScannerService","constructor","defaultConfig","inputStream","name","type","locator","patchSize","halfSample","locate","numOfWorkers","frequency","isScanMatch","scanResult","errorThresholdPercentage","avgErrors","meanBy","codeResult","decodedCodes","start","config","onProcessed","onDetected","result","barcode","code","next","init","error","stop","unsubscribe","undefined","arr","property","reduce","acc","item","length","drawingCtx","canvas","ctx","overlay","drawingCanvas","dom","boxes","canvasWidth","getAttribute","canvasHeight","width","parseInt","height","clearRect","filter","box","forEach","ImageDebug","drawPath","x","y","color","lineWidth","line","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}