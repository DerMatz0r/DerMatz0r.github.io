{"version":3,"file":"main.js","mappings":"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","sources":["./projects/ngx-barcode-scanner/src/lib/ngx-barcode-scanner.component.ts","./projects/ngx-barcode-scanner/src/lib/ngx-barcode-scanner.component.html","./projects/ngx-barcode-scanner/src/lib/ngx-barcode-scanner.module.ts","./projects/ngx-barcode-scanner/src/lib/ngx-barcode-scanner.service.ts","./projects/ngx-barcode-scanner/src/lib/utils.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/data.service.ts","./src/app/saeule/saeule.component.ts","./src/app/top-bar/top-bar.component.ts","./src/app/top-bar/top-bar.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {NgxBarcodeScannerService} from './ngx-barcode-scanner.service';\nimport {QuaggaJSConfigObject} from '@ericblade/quagga2';\nimport {Utils} from './utils';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ngx-barcode-scanner',\n  templateUrl: './ngx-barcode-scanner.component.html',\n  styleUrls: ['./ngx-barcode-scanner.component.css']\n})\nexport class NgxBarcodeScannerComponent implements OnInit, OnDestroy {\n  @Input() codes: string | string[] = [\n    'code_128', 'ean', 'ean_8', 'code_39', 'code_39_vin',\n    'codabar', 'upc', 'upc_e', 'i2of5', '2of5', 'code_93'];\n  @Input() config!: QuaggaJSConfigObject;\n  @Input() errorThreshold!: number;\n  @Input() value!: string;\n  @Output() valueChange = new EventEmitter();\n  @Output() exception = new EventEmitter();\n\n  constructor(\n    private service: NgxBarcodeScannerService\n  ) {\n  }\n\n  private setConfig() {\n    if (!this.config) {\n      this.config = {\n        ...this.service.defaultConfig(), decoder: {\n          readers: this.readers()\n        }\n      };\n    }\n    if (!this.config.inputStream) {\n      this.config.inputStream = {};\n    }\n    Utils.setOrDefault(this.config.inputStream, 'name', 'Live');\n    Utils.setOrDefault(this.config.inputStream, 'type', 'LiveStream');\n    if (!this.config.locator) {\n      this.config.locator = {};\n    }\n    Utils.setOrDefault(this.config.locator, 'patchSize', 'medium');\n    Utils.setOrDefault(this.config.locator, 'halfSample', false);\n    Utils.setOrDefault(this.config, 'locate', true);\n    Utils.setOrDefault(this.config, 'numOfWorkers', 8);\n    Utils.setOrDefault(this.config, 'frequency', 10);\n    if (!this.config.decoder) {\n      this.config.decoder = {};\n    }\n    Utils.setOrDefault(this.config.decoder, 'readers', this.readers());\n\n  }\n\n  ngOnInit(): void {\n    this.setConfig();\n    const threshold = isNaN(this.errorThreshold) ? 0.1 : this.errorThreshold;\n    this.service.start(this.config, threshold).subscribe((value) => {\n      this.valueChange.emit(value);\n    }, error => {\n      this.exception.emit(error);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.service.stop();\n  }\n\n  readers(): string[] {\n    const types = (typeof this.codes === 'string') ? [this.codes] : this.codes;\n    return types.map(it => it + '_reader');\n  }\n\n}\n","<div id=\"interactive\" class=\"viewport\"></div>\n","import {NgModule} from '@angular/core';\nimport {NgxBarcodeScannerComponent} from './ngx-barcode-scanner.component';\n\n\n@NgModule({\n  declarations: [NgxBarcodeScannerComponent],\n  imports: [],\n  exports: [NgxBarcodeScannerComponent]\n})\nexport class NgxBarcodeScannerModule {\n}\n","import {Injectable} from '@angular/core';\nimport Quagga, {QuaggaJSConfigObject, QuaggaJSResultObject} from '@ericblade/quagga2';\nimport {from, Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxBarcodeScannerService {\n  private scanResult ?: Subject<string>;\n\n  constructor() { }\n\n  public defaultConfig(): QuaggaJSConfigObject {\n    return {\n      inputStream: {\n        name: 'Live',\n        type: 'LiveStream',\n      },\n      locator: {\n        patchSize: 'medium',\n        halfSample: false\n      },\n      locate: true,\n      numOfWorkers: 8,\n      frequency: 10\n    };\n  }\n\n  isScanMatch(scanResult: QuaggaJSResultObject, errorThresholdPercentage: number): boolean {\n    const avgErrors = this.meanBy(scanResult.codeResult.decodedCodes, 'error');\n    return !!avgErrors && avgErrors < errorThresholdPercentage;\n  }\n\n  start(config: QuaggaJSConfigObject, errorThresholdPercentage: number): Observable<string> {\n    if (typeof this.scanResult === 'undefined') {\n      this.scanResult = new Subject<string>();\n    }\n    Quagga.onProcessed((scanResult: QuaggaJSResultObject) => {\n      this.onProcessed(scanResult);\n    });\n    Quagga.onDetected((result: QuaggaJSResultObject) => {\n      const barcode = result.codeResult.code;\n      if (this.isScanMatch(result, errorThresholdPercentage)) {\n        this.scanResult?.next(barcode + '');\n      }\n    });\n\n    Quagga.init(config, async (error) => {\n      if (error) {\n        this.scanResult?.error(error);\n        await this.stop();\n      } else {\n        Quagga.start();\n      }\n    });\n\n    return this.scanResult;\n\n  }\n\n  stop(): Observable<void> {\n    if (typeof this.scanResult !== 'undefined') {\n      this.scanResult?.unsubscribe();\n      this.scanResult = undefined;\n    }\n    return from(Quagga.stop());\n  }\n\n  /* eslint-disable */\n  private meanBy(arr: any[], property: string): number | undefined {\n    if (!arr) {\n      return undefined;\n    }\n    return arr.reduce((acc, item) => (property in item) ? acc + item[property] : acc, 0) / arr.length;\n  }\n\n  private onProcessed(result: QuaggaJSResultObject) {\n    const drawingCtx = Quagga.canvas.ctx.overlay;\n    const drawingCanvas: HTMLCanvasElement = Quagga.canvas.dom.overlay;\n\n    if (result) {\n      if (result.boxes) {\n        const canvasWidth: string = drawingCanvas.getAttribute('width') ?? '0';\n        const canvasHeight: string = drawingCanvas.getAttribute('height') ?? '0';\n        const width = parseInt(canvasWidth, 10);\n        const height = parseInt(canvasHeight, 10);\n        drawingCtx.clearRect(0, 0, width, height);\n        result.boxes.filter((box) => box !== result.box).forEach((box) => {\n          Quagga.ImageDebug.drawPath(box, {x: 0, y: 1}, drawingCtx, {color: 'green', lineWidth: 2});\n        });\n      }\n\n      if (result.box) {\n        Quagga.ImageDebug.drawPath(result.box, {x: 0, y: 1}, drawingCtx, {color: '#00F', lineWidth: 2});\n      }\n\n      if (result.codeResult && result.codeResult.code) {\n        Quagga.ImageDebug.drawPath(result.line, {x: 'x', y: 'y'}, drawingCtx, {color: 'red', lineWidth: 3});\n      }\n    }\n  }\n}\n","export class Utils {\n  /* eslint-disable */\n  static setOrDefault(object: any, path: string, value: any): void {\n    if (typeof object[path] === 'undefined') {\n      object[path] = value;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SaeuleComponent } from '../app/saeule/saeule.component';\r\nimport { AppComponent } from './app.component';\r\n\r\n\r\nconst routes: Routes = [\r\n{path:\":id\",component:SaeuleComponent},\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import {Component} from '@angular/core';\nimport { ActivatedRoute,ParamMap } from '@angular/router'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent  {\n\n  value!: string;\n  isError = false;\n  scannerSichtbar = true;\n\n  constructor(\n    private route: ActivatedRoute\n    )\n    {\n\n    }\n\n  onError(error: any) {\n    console.error(error);\n    this.isError = true;\n\n  }\n\n  onValueChange(){\n    this.scannerSichtbar = false;\n  }\n\n  erneutScannen(){\n      this.scannerSichtbar = true;\n    }\n  abschicken(){\n    console.log(this.route.snapshot.paramMap.get('id'));\n  }\n  }\n\n\n\n","\n\n<app-top-bar></app-top-bar>\n<ng-container *ngIf=\"scannerSichtbar==true\">\n<h2>Bitte Barcode scannen</h2>\n\n</ng-container>\n<ng-container *ngIf=\"scannerSichtbar==false\">\n  <mat-form-field class=\"textfeld-full-width\" appearance=\"fill\">\n    <mat-label>Gescannter Barcode</mat-label>\n    <input matInput placeholder=\"Gescannter Barcode\" value=\"{{value}}\" id=\"inputBarcodeScanner\">\n  </mat-form-field>\n  <div class=\"reihe-button-row\">\n    <button mat-button (click)=\"erneutScannen()\">Erneut scannen</button>\n    <button mat-button (click)=\"abschicken()\">Bestätigen</button>\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"scannerSichtbar==true\">\n<p style=\"color:red\" *ngIf=\"isError==true\">Barcode scan is not available.</p>\n<ngx-barcode-scanner [(value)]=\"value\" (valueChange)=\"onValueChange()\"\n                     [codes]=\"['i2of5']\" [errorThreshold]=\"0.1\" (exception)=\"onError($event)\"></ngx-barcode-scanner>\n\n</ng-container>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {NgxBarcodeScannerModule} from '../../projects/ngx-barcode-scanner/src/lib/ngx-barcode-scanner.module';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SaeuleComponent } from './saeule/saeule.component';\nimport { TopBarComponent } from './top-bar/top-bar.component';\nimport {AppRoutingModule} from'./app-routing.module'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SaeuleComponent,\n    TopBarComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgxBarcodeScannerModule,\n    MatFormFieldModule,\n    FormsModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatTooltipModule,\n    BrowserAnimationsModule,\n    AppRoutingModule\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n//Data Service ist dafuer da Nachrichten zwischen Komponenten auszutauschen\n@Injectable(\n  {providedIn: 'root'}\n)\nexport class DataService {\n\n  private messageSource = new BehaviorSubject('0');\n  currentMessage = this.messageSource.asObservable();\n\n  constructor() { }\n\n  changeMessage(message: string) {\n    this.messageSource.next(message)\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute,ParamMap } from '@angular/router'\nimport { DataService } from '../data.service';\n\n\n\n@Component({\n  selector: 'app-saeule',\n  templateUrl: './saeule.component.html',\n  styleUrls: ['./saeule.component.css']\n})\nexport class SaeuleComponent implements OnInit {\n  id =this.route.snapshot.paramMap.get('id'); //Url Parameter id bekommen\n  constructor(\n    private route: ActivatedRoute,\n    private data: DataService\n    )\n    {\n\n    }\n\n  ngOnInit(): void {\n\n  this.data.changeMessage(String(this.id)); //Id weiter senden mithilfe DataService an Top-Bar Component\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from \"../data.service\";\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.css']\n})\nexport class TopBarComponent implements OnInit {\n  message: string;\n\n\n\n\n  constructor(private data: DataService) { }\n\n  ngOnInit(): void { //ista oder esta? oder kista?\n  this.data.currentMessage.subscribe(message => this.message=message); //Url Parameter ID von der Componente Saeule bekommen\n  }\n\n}\n","<div>\n  <h1>Säule: {{message}}</h1>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["Quagga","from","Subject","NgxBarcodeScannerService","constructor","defaultConfig","inputStream","name","type","locator","patchSize","halfSample","locate","numOfWorkers","frequency","isScanMatch","scanResult","errorThresholdPercentage","avgErrors","meanBy","codeResult","decodedCodes","start","config","onProcessed","onDetected","result","barcode","code","next","init","error","stop","unsubscribe","undefined","arr","property","reduce","acc","item","length","drawingCtx","canvas","ctx","overlay","drawingCanvas","dom","boxes","canvasWidth","getAttribute","canvasHeight","width","parseInt","height","clearRect","filter","box","forEach","ImageDebug","drawPath","x","y","color","lineWidth","line","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}